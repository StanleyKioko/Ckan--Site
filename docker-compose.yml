services:
  db:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - common
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 5

  solr:
    image: solr:9.0
    environment:
      CKAN_SOLR_URL: ${CKAN_SOLR_URL}
    networks:
      - common
    volumes:
      - solr_data:/var/solr
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8983/solr/"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      - db

  redis:
    image: redis:${REDIS_VERSION}
    networks:
      - common
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  ckan:
    image: solr:9.0
    environment:
      CKAN_SITE_URL: ${CKAN_SITE_URL}
      CKAN_SQLALCHEMY_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}  # Updated URL
      CKAN_SOLR_URL: ${CKAN_SOLR_URL}
      CKAN_REDIS_URL: ${CKAN_REDIS_URL}
    networks:
      - common
    depends_on:
      - db
      - solr
      - redis
    volumes:
      - ckan_storage:/var/lib/ckan
    ports:
      - "5000:5000"
    restart: unless-stopped

  data-pusher:
    image: solr:9.0
    restart: always
    environment:
      CKAN_SITE_URL: ${CKAN_SITE_URL}
      CKAN_SQLALCHEMY_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
    depends_on:
      - db
      - redis

networks:
  common:
    driver: bridge

volumes:
  pg_data:
  solr_data:
  ckan_storage:

